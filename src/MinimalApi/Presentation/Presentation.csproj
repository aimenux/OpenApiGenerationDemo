<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <IsReleaseMode>$(Configuration.Equals('Release'))</IsReleaseMode>
        <OpenApiGenerateDocuments>$(IsReleaseMode)</OpenApiGenerateDocuments>
        <OpenApiGenerateDocumentsOnBuild>$(IsReleaseMode)</OpenApiGenerateDocumentsOnBuild>
        <OpenApiGenerateDocumentsOptions>--file-name oas</OpenApiGenerateDocumentsOptions>
        <OpenApiDocumentsDirectory>$(SolutionDir)/oas/minimal-api</OpenApiDocumentsDirectory>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Asp.Versioning.Http" />
        <PackageReference Include="Asp.Versioning.Mvc.ApiExplorer" />
        <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
        <PackageReference Include="Microsoft.Extensions.ApiDescription.Server">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Scalar.AspNetCore" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Application\Application.csproj" />
        <ProjectReference Include="..\Infrastructure\Infrastructure.csproj" />
    </ItemGroup>

    <Target Name="RenameOpenApiDocuments" AfterTargets="GenerateOpenApiDocuments">
        <ItemGroup>
            <GeneratedOpenApiFiles Include="$(OpenApiDocumentsDirectory)\*.json" />
        </ItemGroup>
        <Exec Command="for %%f in (@(GeneratedOpenApiFiles->'%(FullPath)')) do (if %%~nxf==oas.json ren %%f oas-v1.json)" />
        <Exec Command="for %%f in (@(GeneratedOpenApiFiles->'%(FullPath)')) do (if %%~nxf==oas_v2.json ren %%f oas-v2.json)" />
    </Target>
    
</Project>